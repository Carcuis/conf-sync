Plugin 'vim-commentary'
Plugin 'vim-surround'

set nu
set rnu
set incsearch
set ignorecase
set smartcase
set easymotion
set scrolloff=5
set sidescrolloff=10
set timeoutlen=500
set visualbell
set ideajoin

let mapleader = "\<space>"

for mapping in ['jj', 'jk', 'kj', 'kk', 'jl', 'jh']
    execute 'inoremap '.mapping.' <esc>'
    execute 'cnoremap '.mapping.' <C-c>'
endfor

" code navigation
map gd <Action>(GotoDeclarationOnly)
map ge <Action>(GotoImplementation)
map gs <Action>(GotoSuperMethod)
map gr <Action>(ShowUsages)
map gt <Action>(GotoTypeDeclaration)
map gh <Action>(GotoRelated)
map <C-o> <Action>(Back)
map <C-i> <Action>(Forward)
map <C-k> <Action>(VcsShowPrevChangeMarker)
map <C-j> <Action>(VcsShowNextChangeMarker)

" ide actions
map ru <Action>(Run)
map rd <Action>(Debug)
map rn <Action>(RenameElement)
map <c-t> <Action>(ActivateTerminalToolWindow)
map <Leader>fr <Action>(RecentFiles)
map <Leader>ff <Action>(GotoFile)
map <Leader>fw <Action>(FindInPath)
imap <C-e> <Action>(CodeCompletion)
map <C-n> <Action>(GotoNextElementUnderCaretUsage)
map <C-p> <Action>(GotoPrevElementUnderCaretUsage)
map <M-e> <Action>(ShowErrorDescription)
vmap <leader>tr <Action>($EditorTranslateAction)

" navigate windows
map <M-h> <C-w>h
map <M-j> <C-w>j
map <M-k> <C-w>k
map <M-l> <C-w>l
map <leader>sp :split<CR>
map <leader>v :vsplit<CR>
map H :tabp<cr>
map L :tabn<cr>
map <leader>c :bd<cr>

" copy and paste
map <leader>y "+y
map <Leader>d "+d
map <leader>p "+p
map <leader>P "+P

map <c-h> 10zh
map <c-l> 10zl
imap <c-h> 10zh
imap <c-l> 10zl
imap <c-j> <esc>o
map <M-s> :w<CR>
map <leader>q :q<CR>
map <leader>wq :wq<CR>
map <leader>sf <Action>(IdeaVim.ReloadVimRc.reload)
